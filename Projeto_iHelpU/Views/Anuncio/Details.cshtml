@model iHelpU.MODEL.Models.AnuncioServico

@{
    ViewData["Title"] = "Detalhes do Anúncio";
}

<style>
    .details-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #333;
        color: #fff;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .details-header {
        text-align: center;
        margin-bottom: 20px;
    }

        .details-header h1 {
            font-size: 28px;
        }

    .details-row dt {
        font-weight: bold;
        color: #ccc;
    }

    .details-row dd {
        margin-bottom: 10px;
        color: #ddd;
    }

    .button-container {
        margin-top: 20px;
        text-align: center;
    }

    .btn-primary, .btn-secondary {
        padding: 10px 20px;
        font-size: 16px;
        border: none;
        border-radius: 4px;
        text-decoration: none;
        transition: background-color 0.3s ease;
    }

    .btn-primary {
        background-color: #28a745;
        color: #fff;
    }

        .btn-primary:hover {
            background-color: #218838;
        }

    .btn-secondary {
        background-color: #6c757d;
        color: #fff;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }

    #map {
        height: 400px;
        width: 100%;
        margin-top: 20px;
        border-radius: 8px;
    }

    .modal-body {
        color: #000;
    }

    .modal-header {
        color: #000;
    }

</style>

<div class="details-container">
    <div class="details-header">
        <h1>Detalhes do Anúncio</h1>
        <hr />
    </div>

    <dl class="row details-row">
        <dt class="col-sm-4">Tipo de Serviço</dt>
        <dd class="col-sm-8">@Model.TipoServico?.Descricao</dd>

        <dt class="col-sm-4">Usuário</dt>
        <dd class="col-sm-8">@Model.Usuario?.PrimeiroNome @Model.Usuario?.SegundoNome</dd>

        <dt class="col-sm-4">Nome do Serviço</dt>
        <dd class="col-sm-8">@Model.NomeServico</dd>

        <dt class="col-sm-4">Descrição</dt>
        <dd class="col-sm-8">@Model.Descricao</dd>

        <dt class="col-sm-4">Coordenada X</dt>
        <dd class="col-sm-8">@Model.CoordenadaX</dd>

        <dt class="col-sm-4">Coordenada Y</dt>
        <dd class="col-sm-8">@Model.CoordenadaY</dd>

        <dt class="col-sm-4">Status</dt>
        <dd class="col-sm-8">@Model.IdStatusNavigation?.Descricao</dd>

        <dt class="col-sm-4">Estado</dt>
        <dd class="col-sm-8">@Model.Estado</dd>


        <dt class="col-sm-4">Cidade</dt>
        <dd class="col-sm-8">@Model.Cidade</dd>

        <dt class="col-sm-4">Rua</dt>
        <dd class="col-sm-8">@Model.Rua</dd>

    </dl>

    <!-- Contêiner do mapa -->
    <div id="map"></div>

    <div class="button-container">
        <a href="@Url.Action("HomePage", "iHelpU")" class="btn-secondary">Voltar</a>
    </div>

    <div class="button-container">
        <!-- Botão para abrir o modal -->
        <button type="button" class="btn-primary" data-bs-toggle="modal" data-bs-target="#contatoModal">
            Ver Contatos
        </button>
    </div>
</div>

<!-- Modal para exibir os contatos -->
<div class="modal fade" id="contatoModal" tabindex="-1" aria-labelledby="contatoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="contatoModalLabel">Contatos do Anunciante</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p><strong>Email:</strong> @Model.Usuario?.Email</p>
                <p><strong>Telefone:</strong> @Model.Usuario?.Telefone</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-secondary" data-bs-dismiss="modal">Fechar</button>
            </div>
        </div>
    </div>
</div>

<script>
    function initMap() {
        let coordenadaX = '@Model.CoordenadaX'.replace(',', '.');
        let coordenadaY = '@Model.CoordenadaY'.replace(',', '.');

        const serviceLocation = {
            lat: parseFloat(coordenadaX),
            lng: parseFloat(coordenadaY)
        };

        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 15,
            center: serviceLocation,
        });

        new google.maps.Marker({
            position: serviceLocation,
            map: map,
            title: "@Model.NomeServico"
        });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBMW3nm3S46jerl6RPcygOI_CnnY_1Aj5w&callback=initMap" async defer></script>
